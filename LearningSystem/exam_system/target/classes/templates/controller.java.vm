package ${package.Controller};

import com.baomidou.mybatisplus.extension.plugins.pagination.Page;
import com.project.template.common.PageVO;
import com.project.template.common.Result;
import com.project.template.entity.${entity};
import com.project.template.service.${entity}Service;
import io.swagger.annotations.ApiOperation;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.*;
import org.springframework.web.bind.annotation.RequestMapping;
    #if(${restControllerStyle})
    import org.springframework.web.bind.annotation.RestController;
    #else
    import org.springframework.stereotype.Controller;
    #end
    #if(${superControllerClassPackage})
    import ${superControllerClassPackage};
    #end

import javax.annotation.Resource;
import java.util.List;
import java.util.Map;

/**
 * <p>
 * $!{table.comment} 前端控制器
 * </p>
 *
 * @author ${author}
 *
 */
#if(${restControllerStyle})
@RestController
#else
@Controller
#end
@RequestMapping("#if(${package.ModuleName})/${package.ModuleName}#end/#if(${controllerMappingHyphenStyle})${controllerMappingHyphen}#else${table.entityPath}#end")
#if(${kotlin})
class ${table.controllerName}#if(${superControllerClass}) : ${superControllerClass}()#end

#else
    #if(${superControllerClass})
    public class ${table.controllerName} extends ${superControllerClass} {
    #else
    public class ${table.controllerName} {
    #end
@Resource
private ${entity}Service service;
/**
 * 列表
 */
@ApiOperation(value = "列表", notes = "列表")
@GetMapping("/list")
public Result<List<${entity}>>list(){
        return new Result<>().success(service.list());
        }

/**
 * 分页查询
 */
@ApiOperation(value = "分页查询", notes = "分页查询")
@GetMapping("/page")
public Result<PageVO<${entity}>>findPage(@RequestParam Map<String, Object> query,@RequestParam(defaultValue = "1") Integer pageNum,@RequestParam(defaultValue = "10") Integer pageSize){
        Page<${entity}> page=service.page(query,pageNum,pageSize);
        return new Result<>().success(new PageVO<>(page));
        }

/**
 * 数据新增
 */
@ApiOperation(value = "数据新增", notes = "数据新增")
@PostMapping("/add")
public Result add(@Validated @RequestBody ${entity} entity){
        service.save(entity);
        return new Result<>().success();
        }

/**
 * 数据更新
 */
@ApiOperation(value = "数据更新", notes = "数据更新")
@PutMapping("/update")
public Result updateById(@Validated @RequestBody ${entity} entity){
        service.updateById(entity);
        return new Result<>().success();
        }

/**
 * 根据id删除
 */
@ApiOperation(value = "数据根据id批量删除", notes = "数据根据id批量删除")
@DeleteMapping("/delBatch")
public Result delBatch(@RequestBody List<Integer> ids){
        service.removeByIds(ids);
        return new Result<>().success();
        }

/**
 * 根据id查询
 */
@ApiOperation(value = "根据id查询", notes = "根据id查询")
@GetMapping("/getById")
public Result<${entity}> getById(@RequestParam("id") Integer id){
    ${entity} entity=service.getById(id);
        return new Result<>().success(entity);
        }
        }
#end
